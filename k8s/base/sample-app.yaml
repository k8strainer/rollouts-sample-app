apiVersion: v1
kind: Namespace
metadata:
  labels:
    argocd.argoproj.io/managed-by: argocd
    kubernetes.io/metadata.name: sample-app
    name: sample-app
  name: sample-app
---

apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: sample-app
  namespace: sample-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-app
  template:
    metadata:
      labels:
        app: sample-app
    spec:
      containers:
      - name: sample-app
        image: gcr.io/cluster-01-271319/sample-app-opns:1.0.0
        imagePullPolicy: Always
        #image: gcr.io/cluster-01-271319/sample-app-opns:2.0.0
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics

  strategy:
    canary:
      analysis:
        startingStep: 2
        templates:
        - templateName: sample-app
      canaryMetadata:
        labels:
          deployment: canary
      canaryService: sample-app-canary
      stableMetadata:
        labels:
          deployment: stable
      stableService: sample-app-stable
      steps:
      - setWeight: 25
      - pause: {}
      - setWeight: 50
      - pause:
          duration: 3m
      - setWeight: 75
      - pause:
          duration: 3m
      trafficRouting:
        nginx:
          additionalIngressAnnotations:
            canary-by-header: X-Canary
          stableIngress: sample-app


---


apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: sample-app
  namespace: sample-app
spec:
  #args:
  #- name: bearer-token
  #  valueFrom:
  #    secretKeyRef:
  #      name: sample-app-admin-secret
  #      key: bearerToken
  metrics:
  # check request count
  - name: total-requests-check
    interval: 1m
    failureLimit: 1
    provider:
      prometheus:
        ### address: https://thanos-querier.openshift-monitoring.svc.cluster.local:9091 ### opns
        address: http://prometheus-k8s.monitoring.svc.cluster.local:9090
        insecure: true  # Avoid TLS handshake errors
        #headers:
        #- key: Authorization
        #  value: "Bearer {{ args.bearer-token }}"
        query: |
          sum(increase(
            sample_app_http_requests_total{service="sample-app-canary", status="200"}[1m])
          )
    successCondition: len(result) > 0 && result[0] >= 20

  # check request duration
  - name: request-duration-check
    interval: 1m
    failureLimit: 1
    provider:
      prometheus:
        ### address: https://thanos-querier.openshift-monitoring.svc.cluster.local:9091 ### opns
        address: http://prometheus-k8s.monitoring.svc.cluster.local:9090
        insecure: true
        #headers:
        #- key: Authorization
        #  value: "Bearer {{ args.bearer-token }}"
        query: |
          1000 * (
            sum(increase(sample_app_http_request_duration_seconds_sum{service="sample-app-canary",status="200"}[1m]))
            /
            sum(increase(sample_app_http_request_duration_seconds_count{service="sample-app-canary",status="200"}[1m]))
          )
    #(* 1000 zur umrechnung in Milisekunden)
    # Succeeds wenn der Durchschnitt <= 0.010 Sek. (10 ms) war
    successCondition: len(result) > 0 && result[0] <= 0.010


---
apiVersion: v1
kind: Service
metadata:
  name: sample-app-stable
  namespace: sample-app
  labels:
    app: sample-app
spec:
  ports:
  - name: http
    port: 8080
    targetPort: http
  - name: metrics
    port: 9090
    targetPort: metrics
  selector:
    app: sample-app
---
apiVersion: v1
kind: Service
metadata:
  name: sample-app-canary
  namespace: sample-app
  labels:
    app: sample-app
spec:
  ports:
  - name: http
    port: 8080
    targetPort: http
  - name: metrics
    port: 9090
    targetPort: metrics
  selector:
    app: sample-app
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: sample-app
  namespace: sample-app
  labels:
    app: sample-app
spec:
  selector:
    matchLabels:
      app: sample-app
  endpoints:
  - port: metrics
    path: /metrics
    interval: 10s
  namespaceSelector:
    matchNames:
    - sample-app



---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argo-rollouts.argoproj.io/managed-by-rollouts: sample-app
  labels:
    app: sample-app
  name: sample-app
  namespace: sample-app
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: sample-app
  type: LoadBalancer
---

apiVersion: v1
kind: Service
metadata:
  annotations:
    argo-rollouts.argoproj.io/managed-by-rollouts: sample-app
  labels:
    app: sample-app
  name: sample-app-canary
  namespace: sample-app
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: sample-app
  type: LoadBalancer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: sample-app
  name: sample-app
  namespace: sample-app
---

apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  annotations:
  labels:
    app: sample-app
  name: sample-app
  namespace: sample-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-app
  strategy:
    canary:
      analysis:
        startingStep: 2
        templates:
        - templateName: sample-app
      canaryMetadata:
        labels:
          deployment: canary
      canaryService: sample-app-canary
      stableMetadata:
        labels:
          deployment: stable
      stableService: sample-app
      steps:
      - setWeight: 25
      - pause: {}
      - setWeight: 50
      - pause:
          duration: 3m
      - setWeight: 75
      - pause:
          duration: 3m
      trafficRouting:
        nginx:
          additionalIngressAnnotations:
            canary-by-header: X-Canary
          stableIngress: sample-app
  template:
    metadata:
      labels:
        app: sample-app
    spec:
      containers:
      - env:
        - name: HTTP_PORT
          value: "8080"
        - name: METRICS_PORT
          value: "9090"
        - name: KUBERNETES_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_POD
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KUBERNETES_DEPLOYMENT
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['deployment']
        #image: gcr.io/sci-4-data/sci4/sample-app:1.0.0
        image: gcr.io/sci-4-data/sci4/sample-app:latest
        name: sample-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
      serviceAccountName: sample-app

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: sample-app
    release: prometheus
  name: sample-app
  namespace: sample-app
spec:
  endpoints:
  - path: /monitoring/metrics
    port: metrics
  namespaceSelector:
    matchNames:
    - sample-app
  selector:
    matchLabels:
      app: sample-app
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  annotations:
  generation: 1
  name: sample-app
  namespace: sample-app
spec:
  metrics:
  - failureLimit: 0
    interval: 1m
    name: success-share
    provider:
      prometheus:
        #address: http://prometheus-operated.monitoring.svc.cluster.local:9090
        address: http://prometheus-k8s.monitoring.svc.cluster.local:9090
        query: |
          sum(rate(
            sample_app_requests_count{service="sample-app-canary", success="true"}[1m])
          ) by (service)
          /
          sum(rate(
            sample_app_requests_count{service="sample-app-canary"}[1m])
          ) by (service)
          unless sum(rate(
            sample_app_requests_count{service="sample-app-canary"}[1m])
          ) by (service) == 0
    successCondition: len(result) == 0 || result[0] >= 0.99
